
(:patch
 (:name "pan")
 (:doc "")
 (:info
  (:created "2021/05/14 14:22:00")
  (:modified "2021/05/14 14:25:14")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1606 767)) (:position (112 54)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :function)
   (:reference outfile)
   (:group-id nil)
   (:name "outfile")
   (:x 642)
   (:y 97)
   (:w 289)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NAME")
     (:value "")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 748)
   (:y 54)
   (:w 75)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "pan.txt")
   (:id 1))
  (:box
   (:type :function)
   (:reference outfile)
   (:group-id nil)
   (:name "outfile")
   (:x 348)
   (:y 97)
   (:w 289)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NAME")
     (:value "")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 442)
   (:y 54)
   (:w 100)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "velocity.txt")
   (:id 3))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name nil)
   (:x 128)
   (:y 157)
   (:w 456)
   (:h 334)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "50 60 20 30 (40 30 50 10) 40 50 60 "
         "80 100 "
         ""
         "50 60 20 (40 30 50 10) 40 30 50 60 70 "
         "80 100 "
         "20 20 10 "
         "40 67 "
         "50"
         "(90 90 90 90) "
         "40 70 50 "
         "20 40 50 50 "
         "60 "
         "20 30 40 50 (110 110 110 110) 40 50 60  "
         "50 60 20 30 50 (40 30 50 10) 40 50 "
         ""
         "60 70 30 "
         "(50 45 35 25 44 33) "
         "50 60 20 30 (40 30 50 10) 40 50 60 70 "
         "50 60 70 "
         "(50 60 70 75) (90 90 90 75) (50 50 50 80) "
         ""
         "(50 50 50) (60 60 60) (60 60 60) "
         ""
         "(50 30 50 60 70 50)"))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 4))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name nil)
   (:x 672)
   (:y 153)
   (:w 456)
   (:h 334)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "(-80 50) (-30 75) (-80 50) (-80 50) (-50 50) (-50 50) (-50 50) (-80 80) "
         "(0 45) (-45 35) "
         "(-80 50) (-30 75) (-80 50) (-80 50) (-50 50) (-50 50) (-50 50) (-80 80) (-75 75) "
         "(-50 20) (-45 15) "
         "(-50 20) (-45 15) (-90 90) "
         "(-80 80) (-80 80) "
         "(-80 80) "
         "(-80 80) "
         "(-80 80) (-80 80) (-80 80) "
         "(-80 80) (-60 80) (-80 30) (-50 60) "
         "(-60 50) "
         "(-70 80) (-80 50) (-50 75) (-80 50) (-80 50) (-50 50) (-50 50) (-50 50) "
         "(-80 80) (-75 75) (-80 50) (-50 75) (-80 50) (-80 50) (-50 50) (-50 50) "
         ""
         "(-50 50) (-80 80) (-75 75) "
         "(-80 50) "
         "(-50 50) (-50 50) (-50 50) (-50 50) (-50 50) (-50 50) (-50 50) (-50 50) (-50 50)"
         "(-50 50) (-50 50) (-50 50)  "
         "(-50 50) (-50 50) (-50 50) "
         ""
         "(-50 50) (-30 80) (-80 70) "
         ""
         "(-70 70)"))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 5))
  (:box
   (:type :function)
   (:reference flat)
   (:group-id nil)
   (:name "flat")
   (:x 445)
   (:y 505)
   (:w 59)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "LST") (:value 1) (:reactive nil))
    (:input
     (:type :optional)
     (:name "level")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 5 :in 0)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 0 :in 0)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0)))
  (:connection (:from (:box 4 :out 1)) (:to (:box 6 :in 0)))))