
(:patch
 (:name "pensar peal de sustain")
 (:doc "")
 (:info
  (:created "2021/05/24 14:00:15")
  (:modified "2021/07/10 12:00:10")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1942 1102)) (:position (-9 -9)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "um atras do outro")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1920 1026)) (:position (-9 -9)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:library "OM-CKN")
       (:type :function)
       (:reference om6-true-durations)
       (:group-id nil)
       (:name "om6-true-durations")
       (:x 973)
       (:y 104)
       (:w 169)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "VOICE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :function)
       (:reference dx->x)
       (:group-id nil)
       (:name "dx->x")
       (:x 1002)
       (:y 193)
       (:w 77)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "START")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value (:list 1 1))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:library "OM-CKN")
       (:type :function)
       (:reference ircam-instruments)
       (:group-id nil)
       (:name "ircam-instruments")
       (:x 520)
       (:y 324)
       (:w 160)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTE")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUMBER-OF-THE-INSTRUMENT")
         (:value 20)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "velocity")
         (:value 60)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference ms->sec)
       (:group-id nil)
       (:name "ms->sec")
       (:x 806)
       (:y 337)
       (:w 94)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference sound-silence)
       (:group-id nil)
       (:name "sound-silence")
       (:x 953)
       (:y 458)
       (:w 131)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "DUR")
         (:value 1.0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:library "OM-CKN")
       (:type :function)
       (:reference sound-seq-list)
       (:group-id nil)
       (:name "sound-seq-list")
       (:x 996)
       (:y 688)
       (:w 138)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SOUND")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 1016)
       (:y 650)
       (:w 101)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :object)
       (:reference sound)
       (:group-id nil)
       (:name nil)
       (:x 477)
       (:y 639)
       (:w 231)
       (:h 66)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value :choose-file)
         (:reactive nil)))
       (:outputs (:output (:name "SELF") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class sound)
         (:slots
          ((:onset 0)
           (:duration 7885.2837)
           (:n-samples 347741)
           (:n-channels 1)
           (:sample-rate 44100)
           (:smpl-type :float)
           (:sample-size 24)))
         (:add-slots
          ((:markers nil)
           (:gain 1.0)
           (:access-from-file nil)
           (:file-pathname
            (:pathname
             (:directory
              (:relative
               :back
               :back
               "Ircam Instrumentos"
               "16 Contrabass"
               "pizzicato-l-vib"))
             (:device nil)
             (:host "C")
             (:name "Cb-pizz-lv-G2-pp-1c")
             (:type "aif")))))))
       (:id 7))
      (:box
       (:library "OM-CKN")
       (:type :function)
       (:reference choose)
       (:group-id nil)
       (:name "choose")
       (:x 333)
       (:y 197)
       (:w 85)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 1 2 3 4 5 6 7 8 9 10))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CHORD-N")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:library "OM-CKN")
       (:type :function)
       (:reference choose-to-rest)
       (:group-id nil)
       (:name "choose-to-rest")
       (:x 772)
       (:y 60)
       (:w 138)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 80)
       (:y 861)
       (:w 72)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 10))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 98)
       (:y 765)
       (:w 72)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 11))
      (:box
       (:type :function)
       (:reference approx-m)
       (:group-id nil)
       (:name "approx-m")
       (:x 285)
       (:y 394)
       (:w 103)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "APPROX")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 336)
       (:y 359)
       (:w 32)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2)
       (:id 13))
      (:box
       (:type :special)
       (:reference if)
       (:group-id nil)
       (:name "if")
       (:x 545)
       (:y 596)
       (:w 107)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "THEN")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "else")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:type :function)
       (:reference equal)
       (:group-id nil)
       (:name "equal")
       (:x 347)
       (:y 580)
       (:w 74)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :function)
       (:reference om-)
       (:group-id nil)
       (:name "om-")
       (:x 336)
       (:y 483)
       (:w 65)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 383)
       (:y 545)
       (:w 34)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0)
       (:id 17))
      (:box
       (:library "OM-CKN")
       (:type :function)
       (:reference ckn-sound-transpose)
       (:group-id nil)
       (:name "ckn-sound-transpose")
       (:x 634)
       (:y 543)
       (:w 178)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SOUND")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18))
      (:box
       (:type :special)
       (:reference if)
       (:group-id nil)
       (:name "if")
       (:x 1061)
       (:y 602)
       (:w 189)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "THEN")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "else")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:type :function)
       (:reference lmidic)
       (:group-id nil)
       (:name "lmidic")
       (:x 318)
       (:y 110)
       (:w 81)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 20))
      (:box
       (:type :function)
       (:reference first)
       (:group-id nil)
       (:name "first")
       (:x 279)
       (:y 328)
       (:w 74)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 21))
      (:box
       (:type :function)
       (:reference first)
       (:group-id nil)
       (:name "first")
       (:x 464)
       (:y 423)
       (:w 74)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 22))
      (:box
       (:type :function)
       (:reference lchan)
       (:group-id nil)
       (:name "lchan")
       (:x 489)
       (:y 110)
       (:w 74)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 23))
      (:box
       (:library "OM-CKN")
       (:type :function)
       (:reference choose)
       (:group-id nil)
       (:name "choose")
       (:x 501)
       (:y 197)
       (:w 85)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 1 2 3 4 5 6 7 8 9 10))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CHORD-N")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 24))
      (:box
       (:type :function)
       (:reference first)
       (:group-id nil)
       (:name "first")
       (:x 562)
       (:y 275)
       (:w 74)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 25))
      (:box
       (:type :function)
       (:reference om<)
       (:group-id nil)
       (:name "om<")
       (:x 1092)
       (:y 460)
       (:w 69)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUM2")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 26))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 1125)
       (:y 425)
       (:w 32)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2)
       (:id 27))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "multi-chord")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (1387 970)) (:position (157 0)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :object)
           (:reference sound)
           (:group-id nil)
           (:name nil)
           (:x 214)
           (:y 614)
           (:w 312)
           (:h 90)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:showname nil)
           (:show-markers t)
           (:lock :eval-once)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value :choose-file)
             (:reactive nil)))
           (:outputs (:output (:name "SELF") (:reactive nil)))
           (:window (:size nil) (:position nil))
           (:edition-params)
           (:value
            (:object
             (:class sound)
             (:slots
              ((:onset 0)
               (:duration 6346.644)
               (:n-samples 279887)
               (:n-channels 1)
               (:sample-rate 44100)
               (:smpl-type :float)
               (:sample-size 24)))
             (:add-slots
              ((:markers nil)
               (:gain 1.0)
               (:access-from-file nil)
               (:file-pathname
                (:pathname
                 (:directory
                  (:relative
                   :back
                   :back
                   "OM - WORKSPACE"
                   "IN-FILES"
                   "ircam"))
                 (:device nil)
                 (:host "C")
                 (:name "Fl-aeol-C4-p")
                 (:type "aif")))))))
           (:id 0))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 1062)
           (:y 867)
           (:w 72)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 1))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 916)
           (:y 961)
           (:w 72)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 2))
          (:box
           (:type :function)
           (:reference approx-m)
           (:group-id nil)
           (:name "approx-m")
           (:x 205)
           (:y 151)
           (:w 103)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value 6000)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "APPROX")
             (:value 2)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :function)
           (:reference om-)
           (:group-id nil)
           (:name "om-")
           (:x 148)
           (:y 305)
           (:w 141)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :function)
           (:reference equal)
           (:group-id nil)
           (:name "equal")
           (:x 255)
           (:y 411)
           (:w 74)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "X")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "Y")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 259)
           (:y 376)
           (:w 34)
           (:h 36)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 0)
           (:id 6))
          (:box
           (:type :special)
           (:reference if)
           (:group-id nil)
           (:name "if")
           (:x 254)
           (:y 466)
           (:w 289)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "THEN")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "else")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:library "OM-CKN")
           (:type :function)
           (:reference ircam-instruments)
           (:group-id nil)
           (:name "ircam-instruments")
           (:x 300)
           (:y 239)
           (:w 199)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NOTE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "NUMBER-OF-THE-INSTRUMENT")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "velocity")
             (:value 60)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:library "OM-CKN")
           (:type :function)
           (:reference ckn-sound-transpose)
           (:group-id nil)
           (:name "ckn-sound-transpose")
           (:x 455)
           (:y 412)
           (:w 178)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOUND")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CENTS")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :function)
           (:reference sound-vol)
           (:group-id nil)
           (:name "sound-vol")
           (:x 1006)
           (:y 815)
           (:w 150)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "S")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "GAIN")
             (:value 1.0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :function)
           (:reference om-scale)
           (:group-id nil)
           (:name "om-scale")
           (:x 643)
           (:y 412)
           (:w 227)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "MINOUT")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "MAXOUT")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "minin")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "maxin")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 11))
          (:box
           (:type :value)
           (:reference single-float)
           (:group-id nil)
           (:name "value box")
           (:x 690)
           (:y 312)
           (:w 53)
           (:h 36)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 0.001)
           (:id 12))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 777)
           (:y 376)
           (:w 32)
           (:h 36)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 13))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 813)
           (:y 375)
           (:w 42)
           (:h 36)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 127)
           (:id 14))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 729)
           (:y 376)
           (:w 45)
           (:h 36)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 15))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "loop-list")
           (:x 148)
           (:y 74)
           (:w 86)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 16))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "loop-list")
           (:x 356)
           (:y 108)
           (:w 86)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 17))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "loop-list")
           (:x 532)
           (:y 177)
           (:w 86)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 18))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 1055)
           (:y 958)
           (:w 79)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 19))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input 2") (:doc "")))
           (:group-id nil)
           (:name "input 2")
           (:x 152)
           (:y 24)
           (:w 72)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 20))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "input 3") (:doc "")))
           (:group-id nil)
           (:name "input 3")
           (:x 360)
           (:y 53)
           (:w 72)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 21))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "input 4") (:doc "")))
           (:group-id nil)
           (:name "input 4")
           (:x 583)
           (:y 124)
           (:w 72)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 22)))
         (:connections
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 10 :in 0))
           (:attributes (:color nil :style nil :modif (0 82/185))))
          (:connection (:from (:box 1 :out 0)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 1 :out 1)) (:to (:box 19 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 1)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 8 :in 0)))
          (:connection
           (:from (:box 4 :out 0))
           (:to (:box 5 :in 1))
           (:attributes (:color nil :style nil :modif (0 -17/86))))
          (:connection (:from (:box 4 :out 0)) (:to (:box 9 :in 1)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 7 :in 1)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 7 :in 2)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 1 :in 0)))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 10 :in 1))
           (:attributes (:color nil :style nil :modif (0 130/309))))
          (:connection (:from (:box 12 :out 0)) (:to (:box 11 :in 1)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 11 :in 3)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 11 :in 4)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 11 :in 2)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 3 :in 0)))
          (:connection
           (:from (:box 16 :out 0))
           (:to (:box 4 :in 0))
           (:attributes (:color nil :style nil :modif (0 -19/53))))
          (:connection (:from (:box 17 :out 0)) (:to (:box 8 :in 1)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 8 :in 2)))
          (:connection
           (:from (:box 18 :out 0))
           (:to (:box 11 :in 0))
           (:attributes (:color nil :style nil :modif (0 -5/203))))
          (:connection
           (:from (:box 20 :out 0))
           (:to (:box 16 :in 0))
           (:attributes
            (:color
             (:color 0.2 0.4 0.5 1.0)
             :style
             :curved
             :modif
             nil)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 17 :in 0)))
          (:connection
           (:from (:box 22 :out 0))
           (:to (:box 18 :in 0))))))
       (:group-id nil)
       (:name "multi-chord")
       (:x 1200)
       (:y 331)
       (:w 200)
       (:h 60)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input 2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 3")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 4")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 28))
      (:box
       (:library "OM-CKN")
       (:type :function)
       (:reference sound-mix-list)
       (:group-id nil)
       (:name "sound-mix-list")
       (:x 1234)
       (:y 422)
       (:w 138)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SOUND")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 29))
      (:box
       (:type :function)
       (:reference lvel)
       (:group-id nil)
       (:name "lvel")
       (:x 660)
       (:y 110)
       (:w 67)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 30))
      (:box
       (:library "OM-CKN")
       (:type :function)
       (:reference choose)
       (:group-id nil)
       (:name "choose")
       (:x 666)
       (:y 197)
       (:w 85)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 1 2 3 4 5 6 7 8 9 10))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CHORD-N")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 31))
      (:box
       (:type :function)
       (:reference first)
       (:group-id nil)
       (:name "first")
       (:x 626)
       (:y 276)
       (:w 74)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 32))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 1013)
       (:y 322)
       (:w 81)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 33))
      (:box
       (:type :special)
       (:reference if)
       (:group-id nil)
       (:name "if")
       (:x 923)
       (:y 736)
       (:w 146)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "THEN")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "else")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 34))
      (:box
       (:type :function)
       (:reference equal)
       (:group-id nil)
       (:name "equal")
       (:x 783)
       (:y 458)
       (:w 166)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 35))
      (:box
       (:type :function)
       (:reference remove)
       (:group-id nil)
       (:name "remove")
       (:x 150)
       (:y 818)
       (:w 88)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ITEM")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 36))
      (:box
       (:type :function)
       (:reference lport)
       (:group-id nil)
       (:name "lport")
       (:x 60)
       (:y 115)
       (:w 74)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 37))
      (:box
       (:library "OM-CKN")
       (:type :function)
       (:reference choose)
       (:group-id nil)
       (:name "choose")
       (:x 71)
       (:y 197)
       (:w 85)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 1 2 3 4 5 6 7 8 9 10))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CHORD-N")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 38))
      (:box
       (:type :special)
       (:reference if)
       (:group-id nil)
       (:name "if")
       (:x 72)
       (:y 684)
       (:w 91)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "THEN")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 39))
      (:box
       (:type :function)
       (:reference equal)
       (:group-id nil)
       (:name "equal")
       (:x 58)
       (:y 428)
       (:w 74)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 40))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 94)
       (:y 393)
       (:w 35)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1))
       (:id 41))
      (:box
       (:type :function)
       (:reference remove-dup)
       (:group-id nil)
       (:name "remove-dup")
       (:x 43)
       (:y 302)
       (:w 120)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value (:list 1 2 3 4))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEST")
         (:value eq)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DEPTH")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 42))
      (:box
       (:type :function)
       (:reference om-abs)
       (:group-id nil)
       (:name "om-abs")
       (:x 1013)
       (:y 145)
       (:w 89)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 43))
      (:box
       (:type :function)
       (:reference sound-stereo-pan)
       (:group-id nil)
       (:name "sound-stereo-pan")
       (:x 556)
       (:y 859)
       (:w 157)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "S")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LEFT")
         (:value -100)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "RIGHT")
         (:value 100)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 44))
      (:box
       (:type :function)
       (:reference sound-mono-to-stereo)
       (:group-id nil)
       (:name "sound-mono-to-stereo")
       (:x 425)
       (:y 792)
       (:w 191)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "S")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 45))
      (:box
       (:type :function)
       (:reference first)
       (:group-id nil)
       (:name "first")
       (:x 620)
       (:y 790)
       (:w 74)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 46))
      (:box
       (:type :function)
       (:reference second)
       (:group-id nil)
       (:name "second")
       (:x 685)
       (:y 789)
       (:w 85)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 47))
      (:box
       (:type :function)
       (:reference sound-fade)
       (:group-id nil)
       (:name "sound-fade")
       (:x 692)
       (:y 915)
       (:w 114)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "S")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "IN")
         (:value 0.1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "OUT")
         (:value 0.1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 48))
      (:box
       (:type :value)
       (:reference single-float)
       (:group-id nil)
       (:name "value box")
       (:x 719)
       (:y 862)
       (:w 59)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0.01)
       (:id 49))
      (:box
       (:type :function)
       (:reference extras)
       (:group-id nil)
       (:name "extras")
       (:x 196)
       (:y 111)
       (:w 81)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 50))
      (:box
       (:library "OM-CKN")
       (:type :function)
       (:reference choose)
       (:group-id nil)
       (:name "choose")
       (:x 214)
       (:y 196)
       (:w 85)
       (:h 31)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 1 2 3 4 5 6 7 8 9 10))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CHORD-N")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 51))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "loop-list")
       (:x 802)
       (:y 112)
       (:w 86)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 52))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "loop-list")
       (:x 815)
       (:y 204)
       (:w 86)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 53))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 61)
       (:y 29)
       (:w 72)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 54))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 150)
       (:y 859)
       (:w 79)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 55)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 43 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 53 :in 0)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 14 :in 1))
       (:attributes (:color nil :style nil :modif (0 -813/8224))))
      (:connection (:from (:box 2 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 35 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 34 :in 2)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 19 :in 1)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 21 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 22 :in 0)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 28 :in 0))
       (:attributes (:color nil :style nil :modif (0 -32/233))))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 33 :in 0))
       (:attributes (:color nil :style nil :modif (0 -23/133))))
      (:connection (:from (:box 9 :out 0)) (:to (:box 52 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 11 :out 1)) (:to (:box 36 :in 1)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 16 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 15 :in 1)))
      (:connection
       (:from (:box 18 :out 0))
       (:to (:box 14 :in 2))
       (:attributes (:color nil :style nil :modif (0 76/221))))
      (:connection (:from (:box 19 :out 0)) (:to (:box 6 :in 1)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 21 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 22 :out 0)) (:to (:box 16 :in 0)))
      (:connection (:from (:box 23 :out 0)) (:to (:box 24 :in 0)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 25 :in 0)))
      (:connection
       (:from (:box 24 :out 0))
       (:to (:box 28 :in 1))
       (:attributes (:color nil :style nil :modif (0 -77/292))))
      (:connection (:from (:box 25 :out 0)) (:to (:box 2 :in 1)))
      (:connection (:from (:box 26 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 26 :in 1)))
      (:connection (:from (:box 28 :out 0)) (:to (:box 29 :in 0)))
      (:connection (:from (:box 29 :out 0)) (:to (:box 19 :in 2)))
      (:connection (:from (:box 30 :out 0)) (:to (:box 31 :in 0)))
      (:connection (:from (:box 31 :out 0)) (:to (:box 32 :in 0)))
      (:connection
       (:from (:box 31 :out 0))
       (:to (:box 28 :in 2))
       (:attributes (:color nil :style nil :modif (0 -65/218))))
      (:connection (:from (:box 32 :out 0)) (:to (:box 2 :in 2)))
      (:connection (:from (:box 33 :out 0)) (:to (:box 26 :in 0)))
      (:connection
       (:from (:box 34 :out 0))
       (:to (:box 45 :in 0))
       (:attributes (:color nil :style nil :modif (-37/119 0))))
      (:connection (:from (:box 35 :out 0)) (:to (:box 34 :in 0)))
      (:connection (:from (:box 36 :out 0)) (:to (:box 55 :in 0)))
      (:connection (:from (:box 37 :out 0)) (:to (:box 38 :in 0)))
      (:connection (:from (:box 38 :out 0)) (:to (:box 42 :in 0)))
      (:connection (:from (:box 39 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 40 :out 0)) (:to (:box 39 :in 0)))
      (:connection (:from (:box 41 :out 0)) (:to (:box 40 :in 1)))
      (:connection (:from (:box 42 :out 0)) (:to (:box 40 :in 0)))
      (:connection (:from (:box 43 :out 0)) (:to (:box 1 :in 1)))
      (:connection (:from (:box 44 :out 0)) (:to (:box 48 :in 0)))
      (:connection (:from (:box 45 :out 0)) (:to (:box 44 :in 0)))
      (:connection (:from (:box 46 :out 0)) (:to (:box 44 :in 1)))
      (:connection (:from (:box 47 :out 0)) (:to (:box 44 :in 2)))
      (:connection
       (:from (:box 48 :out 0))
       (:to (:box 39 :in 1))
       (:attributes (:color nil :style nil :modif (103/619 0))))
      (:connection (:from (:box 49 :out 0)) (:to (:box 48 :in 1)))
      (:connection (:from (:box 49 :out 0)) (:to (:box 48 :in 2)))
      (:connection (:from (:box 50 :out 0)) (:to (:box 51 :in 0)))
      (:connection
       (:from (:box 51 :out 0))
       (:to (:box 46 :in 0))
       (:attributes (:color nil :style nil :modif (0 128/299))))
      (:connection
       (:from (:box 51 :out 0))
       (:to (:box 47 :in 0))
       (:attributes (:color nil :style nil :modif (0 244/597))))
      (:connection (:from (:box 52 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 52 :out 0)) (:to (:box 24 :in 1)))
      (:connection (:from (:box 52 :out 0)) (:to (:box 31 :in 1)))
      (:connection (:from (:box 52 :out 0)) (:to (:box 38 :in 1)))
      (:connection (:from (:box 52 :out 0)) (:to (:box 51 :in 1)))
      (:connection (:from (:box 53 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 54 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 54 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 54 :out 0)) (:to (:box 20 :in 0)))
      (:connection (:from (:box 54 :out 0)) (:to (:box 23 :in 0)))
      (:connection (:from (:box 54 :out 0)) (:to (:box 30 :in 0)))
      (:connection (:from (:box 54 :out 0)) (:to (:box 37 :in 0)))
      (:connection (:from (:box 54 :out 0)) (:to (:box 50 :in 0))))))
   (:group-id nil)
   (:name "um atras do outro")
   (:x 45)
   (:y 377)
   (:w 200)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock :locked)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 0))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name nil)
   (:x 98)
   (:y 541)
   (:w 606)
   (:h 186)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 46724.016)
       (:n-samples 2060529)
       (:n-channels 2)
       (:sample-rate 44100)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname nil)))))
   (:id 1))
  (:box
   (:type :object)
   (:reference voice)
   (:group-id 2)
   (:name nil)
   (:x 18)
   (:y 193)
   (:w 1784)
   (:h 143)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TREE")
     (:value (:list 1 (:list (:list (:list 4 4) (:list -1 -1 -1 -1)))))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 60)
     (:reactive nil))
    (:input (:type :key) (:name "lvel") (:value 100) (:reactive nil))
    (:input (:type :key) (:name "loffset") (:value 0) (:reactive nil))
    (:input (:type :key) (:name "lchan") (:value 1) (:reactive nil))
    (:input (:type :key) (:name "lport") (:value nil) (:reactive nil))
    (:input
     (:type :key)
     (:name "extras")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "TREE") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "TEMPO") (:reactive nil))
    (:output (:name "lvel") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "lport") (:reactive nil))
    (:output (:name "extras") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params
    (:velocity-display :value)
    (:duration-display nil)
    (:grid nil)
    (:selected-analysis pcset-analysis)
    (:analysis t)
    (:group-names t)
    (:selected-group :all)
    (:groups t)
    (:h-stretch 1)
    (:scale :scale-1/8)
    (:font-size 75)
    (:staff :gf)
    (:channel-display :hidden)
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 7.5)
      (:list 316 12.55)
      (:list 632 16.8)
      (:list 947 21.05)
      (:list 1263 26.8)
      (:list 1579 32.55)
      (:list 1895 36.3)
      (:list 1985 40.157143)
      (:list 2165 43.87143)
      (:list 2346 47.085717)
      (:list 2526 61.300003)
      (:list 2807 64.91112)
      (:list 2947 68.966675)
      (:list 3789 85.30001)
      (:list 4105 91.63335)
      (:list 4184 108.766686)
      (:list 4465 112.8778)
      (:list 4746 116.988915)
      (:list 5026 123.40003)
      (:list 5588 130.92226)
      (:list 5868 135.03337)
      (:list 6149 138.64449)
      (:list 6229 143.26195)
      (:list 6390 146.89687)
      (:list 6550 150.03179)
      (:list 6630 153.84925)
      (:list 6711 167.9667)
      (:list 7002 171.62055)
      (:list 7099 175.50516)
      (:list 7877 181.08208)
      (:list 7974 194.96669)
      (:list 8605 200.46669)
      (:list 8921 204.21669)
      (:list 9079 208.34169)
      (:list 9237 211.96669)
      (:list 9553 215.09169)
      (:list 9868 229.34169)
      (:list 10121 234.6417)
      (:list 10500 239.9417)
      (:list 10605 243.9417)
      (:list 10816 248.27503)
      (:list 11132 263.325)
      (:list 11763 281.92502)
      (:list 12711 300.17502)
      (:list 13184 305.85)
      (:list 13342 310.275)
      (:list 13658 313.9)
      (:list 13974 323.65)
      (:list 14132 327.775)
      (:list 14289 331.4)
      (:list 14447 335.025)
      (:list 14605 338.65)
      (:list 15237 354.94998)
      (:list 15868 361.24997)
      (:list 16026 376.74997)
      (:list 16425 382.1289)
      (:list 16824 386.70786)
      (:list 17223 391.2868)
      (:list 17622 397.36575)
      (:list 18021 403.4447)
      (:list 18154 406.971)
      (:list 18353 410.76047)
      (:list 18553 420.54993)
      (:list 18868 424.29993)
      (:list 19184 429.8499)
      (:list 19500 434.0999)
      (:list 19816 438.3499)
      (:list 20132 442.5999)
      (:list 20447 446.3499)
      (:list 20538 451.70706)
      (:list 20718 456.92136)
      (:list 20898 460.13565)
      (:list 20989 463.9928)
      (:list 21079 476.84995)
      (:list 21316 490.78745)
      (:list 21456 495.64298)
      (:list 21737 499.7541)
      (:list 22018 503.3652)
      (:list 22158 507.42075)
      (:list 22579 525.3874)
      (:list 23211 536.6874)
      (:list 23368 554.6874)
      (:list 23621 558.1874)
      (:list 24126 564.48737)
      (:list 24379 568.48737)
      (:list 24632 572.48737)
      (:list 24884 577.98737)
      (:list 25137 583.48737)
      (:list 25389 586.98737)
      (:list 25462 590.7731)
      (:list 25606 595.1445)
      (:list 25750 598.2159)
      (:list 25823 602.0016)
      (:list 25895 614.7873)
      (:list 26147 619.2873)
      (:list 26484 624.4206)
      (:list 26596 627.36506)
      (:list 27046 632.6428)
      (:list 27158 647.5873)
      (:list 27316 655.01227)
      (:list 27553 661.94977)
      (:list 27711 676.57477)
      (:list 28026 693.12476)
      (:list 28500 699.99976)
      (:list 28816 706.24976)
      (:list 29132 720.99976)
      (:list 31026 731.49976)
      (:list 31184 746.42475)
      (:list 31437 750.42475)
      (:list 31605 753.59144)
      (:list 31774 757.2581)
      (:list 32279 762.7581)
      (:list 32447 766.4248)
      (:list 32616 769.5915)
      (:list 32784 773.2582)
      (:list 32953 777.42487)
      (:list 33121 780.59156)
      (:list 33289 784.25824)
      (:list 33500 788.59156)
      (:list 33711 799.22486)
      (:list 33963 803.22486)
      (:list 34165 806.52485)
      (:list 34367 810.8248)
      (:list 34569 814.1248)
      (:list 34772 819.2248)
      (:list 34974 823.82477)
      (:list 35142 827.62476)
      (:list 35311 830.79145)
      (:list 35479 834.9581)
      (:list 35647 838.1248)
      (:list 35816 842.2915)
      (:list 36026 846.1248)
      (:list 36237 859.4581)
      (:list 36395 863.5831))))
   (:value
    (:object
     (:class voice)
     (:slots
      ((:onset 0)
       (:duration 37499)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "VOICE")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras
        (:list
         (:list -80 80)
         (:list -10 90)
         (:list -90 30)
         (:list -80 50)
         (:list -80 80)
         (:list -80 50)
         (:list -90 30)
         (:list -10 90)
         (:list 0 80)
         (:list -60 55)
         (:list -80 80)
         (:list -30 90)
         (:list -80 50)
         (:list -50 50)
         (:list -33 50)
         (:list -50 33)
         (:list -50 50)
         (:list -80 80)
         (:list -75 75)
         (:list -50 20)
         (:list -70 70)
         (:list -40 20)
         (:list -45 15)
         (:list -40 40)
         (:list -60 30)
         (:list -30 60)
         (:list -10 100)
         (:list -100 100)
         (:list -30 80)
         (:list -80 30)
         (:list -60 60)
         (:list -10 80)
         (:list -80 30)
         (:list -90 10)
         (:list -60 60)
         (:list -80 80)
         (:list -40 60)
         (:list -60 40)
         (:list -60 45)
         (:list -80 50)
         (:list -100 100)
         (:list -40 30)
         (:list -20 80)
         (:list -40 60)
         (:list -50 90)
         (:list -75 75)
         (:list -50 50)
         (:list -30 35)
         (:list -70 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -80 80)
         (:list -35 35)
         (:list -100 20)
         (:list -50 30)
         (:list -50 30)
         (:list -30 80)
         (:list -30 80)
         (:list -40 50)
         (:list -50 40)
         (:list -20 60)
         (:list -20 60)
         (:list -20 60)
         (:list -80 80)
         (:list -30 30)
         (:list -40 40)
         (:list -20 60)
         (:list -100 100)
         (:list -60 20)
         (:list -80 20)
         (:list -100 100)
         (:list -20 80)
         (:list -50 50)
         (:list -30 80)
         (:list -75 75)
         (:list -30 50)
         (:list -80 80)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)
         (:list -50 50)))
       (:group-ids nil)
       (:tree
        (:list
         26
         (:list
          (:list
           (:list 4 4)
           (:list 1 1 1 1 1 1 (:list 2 (:list -1 2 2 -2))))
          (:list (:list 2 4) (:list (:list 2 (:list 2 -1 6))))
          (:list (:list 5 32) (:list 4.0 1.0))
          (:list
           (:list 4 4)
           (:list
            (:list
             4
             (:list 1 1 1 2 1 1 (:list 2 (:list -1 2 2 -1 1))))))
          (:list (:list 2 4) (:list (:list 2 (:list 3 -1 8 -1))))
          (:list (:list 3 4) (:list 4 2 -1 1 2.0 -2))
          (:list
           (:list 2 4)
           (:list (:list 1 (:list -2 3)) (:list 1 (:list 1.0 -2 3))))
          (:list (:list 1 4) (:list 1))
          (:list (:list 3 8) (:list 3))
          (:list (:list 2 4) (:list 3 1 2.0 2))
          (:list (:list 2 4) (:list -1 1 1 1 4))
          (:list (:list 5 16) (:list 4 1.0))
          (:list
           (:list 4 4)
           (:list (:list 4 (:list 3 3 3 3 3 1 (:list 3 (:list 1 1))))))
          (:list
           (:list 4 4)
           (:list 1 -1 1 1 1 1 (:list 2 (:list -1 2 2 -1 1))))
          (:list (:list 3 32) (:list -3))
          (:list (:list 2 4) (:list (:list 2 (:list -1 2 2 -1 3))))
          (:list (:list 5 16) (:list 4 1.0))
          (:list
           (:list 4 4)
           (:list
            (:list
             4
             (:list 1 -2 1 1 1 1 1 (:list 2 (:list -1 2 2 -1 1))))))
          (:list
           (:list 2 4)
           (:list (:list 2 (:list -1 (:list 4 (:list 3 1 -4 1))))))
          (:list (:list 7 32) (:list 2 3 2))
          (:list (:list 4 32) (:list -4))
          (:list (:list 7 16) (:list 3 2 2))
          (:list (:list 13 16) (:list -12 -1.0))
          (:list
           (:list 4 4)
           (:list
            (:list 2 (:list 1 (:list 4 (:list 1 -1 -3 1))))
            (:list 2 (:list (:list 4 (:list 1.0 -1 -1 1 -1)) -1 1))))
          (:list
           (:list 4 4)
           (:list
            (:list 2 (:list 1 (:list 4 (:list 1 -1 1 -1 1))))
            (:list 2 (:list (:list 4 (:list 1.0 1 -1 1 -1)) 1 1))))
          (:list (:list 4 8) (:list -1 7)))))
       (:lmidic
        (:list
         (:list 5000)
         (:list 6100)
         (:list 6550)
         (:list 5200)
         (:list 4800 5502 6550 6969)
         (:list 6200)
         (:list 5700)
         (:list 6400)
         (:list 4800)
         (:list 7700)
         (:list 4900)
         (:list 6400)
         (:list 6500)
         (:list 6200 5800 6700 7500)
         (:list 5400)
         (:list 5600)
         (:list 6300)
         (:list 6550)
         (:list 6700)
         (:list 5100)
         (:list 6000)
         (:list 6700)
         (:list 7000)
         (:list 7700)
         (:list 7514)
         (:list 7750)
         (:list 5400)
         (:list 7314 6290 6549 5531)
         (:list 4100)
         (:list 4900)
         (:list 6200)
         (:list 5300)
         (:list 5686)
         (:list 6002)
         (:list 6198)
         (:list 7775)
         (:list 5000)
         (:list 6100)
         (:list 6550)
         (:list 5200)
         (:list 4800 5502 6550 6969)
         (:list 6200)
         (:list 5700)
         (:list 6400)
         (:list 6700)
         (:list 6100)
         (:list 5000)
         (:list 5200)
         (:list 6550)
         (:list 7902 6550 6969 7200)
         (:list 6200)
         (:list 5700)
         (:list 6300)
         (:list 6700)
         (:list 6200)
         (:list 5500 6633 7507 7889 6771 7205)
         (:list 6550)
         (:list 6100)
         (:list 5000)
         (:list 5200)
         (:list 4800 5502 6550 6969)
         (:list 6200)
         (:list 5700)
         (:list 6300)
         (:list 6700)
         (:list 6400)
         (:list 5400)
         (:list 4500)
         (:list 4800 5502 6550 6969)
         (:list 4900 6200 6755 6969)
         (:list 5000 5502 6550 7425)
         (:list 6100 6550 6969)
         (:list 6200 6755 6969)
         (:list 7028 6550 7425)
         (:list 6300)
         (:list 6700)
         (:list 5500)
         (:list 6450)
         (:list 6650)
         (:list 6300)
         (:list 6500)
         (:list 6700)
         (:list 4900)
         (:list 6500)
         (:list 6400)
         (:list 6500)
         (:list 6700)
         (:list 6925)))
       (:lonset
        (:list
         0
         316
         632
         947
         1263
         1579
         1985
         2165
         2526
         2947
         4184
         4465
         4746
         5026
         5588
         5868
         6229
         6390
         6630
         6711
         7099
         7974
         8605
         9079
         10121
         10816
         11132
         11763
         12711
         13184
         13658
         14132
         14289
         14447
         14605
         15237
         16026
         16425
         16824
         17223
         17622
         18021
         18154
         18353
         18553
         19184
         19500
         19816
         20132
         20538
         20718
         20989
         21456
         21737
         22158
         22579
         23368
         24126
         24379
         24632
         24884
         25137
         25462
         25606
         25823
         26147
         26484
         27046
         27158
         27316
         27553
         28026
         28500
         28816
         31184
         31437
         32279
         32953
         33500
         33711
         33963
         34367
         34772
         35142
         35479
         35816
         36026
         36395
         37500))
       (:ldur
        (:list
         (:list 315)
         (:list 315)
         (:list 314)
         (:list 315)
         (:list 315 315 315 315)
         (:list 315)
         (:list 179)
         (:list 180)
         (:list 280)
         (:list 1236)
         (:list 280)
         (:list 280)
         (:list 279)
         (:list 561 561 561 561)
         (:list 279)
         (:list 280)
         (:list 160)
         (:list 159)
         (:list 80)
         (:list 290)
         (:list 777)
         (:list 630)
         (:list 315)
         (:list 473)
         (:list 483)
         (:list 315)
         (:list 630)
         (:list 947 947 947 947)
         (:list 472)
         (:list 473)
         (:list 315)
         (:list 156)
         (:list 157)
         (:list 157)
         (:list 631)
         (:list 788)
         (:list 398)
         (:list 398)
         (:list 398)
         (:list 398)
         (:list 398 398 398 398)
         (:list 132)
         (:list 198)
         (:list 199)
         (:list 314)
         (:list 315)
         (:list 315)
         (:list 315)
         (:list 314)
         (:list 179 179 179 179)
         (:list 179)
         (:list 89)
         (:list 280)
         (:list 280)
         (:list 420)
         (:list 788 788 788 788 788 788)
         (:list 252)
         (:list 252)
         (:list 252)
         (:list 251)
         (:list 252 252 252 252)
         (:list 251)
         (:list 143)
         (:list 143)
         (:list 71)
         (:list 336)
         (:list 111)
         (:list 111)
         (:list 157 157 157 157)
         (:list 236 236 236 236)
         (:list 157 157 157 157)
         (:list 473 473 473)
         (:list 315 315 315)
         (:list 315 315 315)
         (:list 252)
         (:list 167)
         (:list 336)
         (:list 167)
         (:list 210)
         (:list 251)
         (:list 201)
         (:list 201)
         (:list 369)
         (:list 168)
         (:list 167)
         (:list 209)
         (:list 210)
         (:list 1104)))
       (:lvel
        (:list
         (:list 50)
         (:list 60)
         (:list 20)
         (:list 30)
         (:list 40 40 40 40)
         (:list 40)
         (:list 50)
         (:list 60)
         (:list 80)
         (:list 100)
         (:list 50)
         (:list 60)
         (:list 20)
         (:list 40 30 50 10)
         (:list 40)
         (:list 30)
         (:list 50)
         (:list 60)
         (:list 70)
         (:list 80)
         (:list 100)
         (:list 20)
         (:list 20)
         (:list 10)
         (:list 40)
         (:list 67)
         (:list 50)
         (:list 90 90 90 90)
         (:list 90)
         (:list 70)
         (:list 50)
         (:list 20)
         (:list 40)
         (:list 50)
         (:list 50)
         (:list 60)
         (:list 20)
         (:list 30)
         (:list 40)
         (:list 50)
         (:list 110 110 110 110)
         (:list 40)
         (:list 50)
         (:list 10)
         (:list 50)
         (:list 60)
         (:list 20)
         (:list 30)
         (:list 50)
         (:list 40 30 50 10)
         (:list 40)
         (:list 50)
         (:list 60)
         (:list 70)
         (:list 30)
         (:list 100 100 100 100 100 100)
         (:list 50)
         (:list 60)
         (:list 20)
         (:list 30)
         (:list 40 30 50 10)
         (:list 40)
         (:list 50)
         (:list 60)
         (:list 70)
         (:list 120)
         (:list 60)
         (:list 70)
         (:list 50 60 70 75)
         (:list 90 90 90 75)
         (:list 50 50 50 80)
         (:list 50 50 50)
         (:list 60 60 60)
         (:list 60 60 60)
         (:list 60)
         (:list 70)
         (:list 100)
         (:list 60)
         (:list 70)
         (:list 40)
         (:list 40)
         (:list 40)
         (:list 40)
         (:list 40)
         (:list 40)
         (:list 40)
         (:list 40)
         (:list 30)))
       (:loffset
        (:list
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0 0 0 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)))
       (:lchan
        (:list
         (:list 25)
         (:list 40)
         (:list 40)
         (:list 25)
         (:list 296 296 296 296)
         (:list 20)
         (:list 25)
         (:list 20)
         (:list 296)
         (:list 2021)
         (:list 25)
         (:list 20)
         (:list 20)
         (:list 296 296 296 2021)
         (:list 25)
         (:list 296)
         (:list 25)
         (:list 20)
         (:list 20)
         (:list 25)
         (:list 296)
         (:list 16)
         (:list 20)
         (:list 2021)
         (:list 296)
         (:list 2021)
         (:list 1997)
         (:list 2021 2021 2021 2021)
         (:list 1997)
         (:list 1997)
         (:list 1997)
         (:list 25)
         (:list 25)
         (:list 40)
         (:list 20)
         (:list 296)
         (:list 1997)
         (:list 40)
         (:list 40)
         (:list 25)
         (:list 270 270 270 270)
         (:list 20)
         (:list 25)
         (:list 20)
         (:list 20)
         (:list 40)
         (:list 25)
         (:list 25)
         (:list 40)
         (:list 296 296 296 296)
         (:list 20)
         (:list 25)
         (:list 20)
         (:list 20)
         (:list 25)
         (:list 1997 296 296 2021 267 270)
         (:list 40)
         (:list 40)
         (:list 25)
         (:list 25)
         (:list 1997 270 296 20)
         (:list 20)
         (:list 25)
         (:list 20)
         (:list 20)
         (:list 270)
         (:list 25)
         (:list 1997)
         (:list 1997 270 296 20)
         (:list 1997 270 296 20)
         (:list 1997 270 296 20)
         (:list 270 296 20)
         (:list 270 296 20)
         (:list 270 296 20)
         (:list 20)
         (:list 20)
         (:list 25)
         (:list 20)
         (:list 20)
         (:list 40)
         (:list 40)
         (:list 20)
         (:list 25)
         (:list 20)
         (:list 40)
         (:list 20)
         (:list 20)
         (:list 296)))
       (:lport
        (:list
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 1 1 1 1)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 1 1 1 1)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 1 1 1 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 1 1 1 1)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 1 1 1 1 1 1)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 1 1 1 1)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 1)
         (:list 0 0 0 0)
         (:list 1 1 1 1)
         (:list 0 0 0 0)
         (:list 0 0 0)
         (:list 1 1 1)
         (:list 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 1)))
       (:llegato nil)
       (:tempo 95)))))
   (:id 2))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 684)
   (:y 148)
   (:w 50)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 95)
   (:id 3))
  (:comment
   (:x 1625)
   (:y 57)
   (:w 112)
   (:h 28)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "PAN")
   (:id 4))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 275)
   (:y 64)
   (:w 85)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "ritmo.txt")
   (:id 5))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 470)
   (:y 61)
   (:w 86)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "notas.txt")
   (:id 6))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 834)
   (:y 81)
   (:w 100)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "velocity.txt")
   (:id 7))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 973)
   (:y 73)
   (:w 143)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "channel.txt")
   (:id 8))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1628)
   (:y 93)
   (:w 102)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "pan.txt")
   (:id 9))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "my-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 82)
       (:y 50)
       (:w 72)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 276)
       (:y 318)
       (:w 79)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name nil)
       (:x 50)
       (:y 147)
       (:w 289)
       (:h 80)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class textbuffer)
         (:slots
          ((:contents
            (:list
             "(((4 4) (1 1 1 1 1 1 (2 (-1 2 2 -2))))) "
             "(((2 4) (2 -1 6)))"
             "(((5 32) (1.0)))"
             "(((4 4) (1 1 1 2 1 1 (2 (-1 2 2 -1 1))))) "
             "(((2 4) (3 -1 8 -1))) "
             "(((3 4) (4 2 -1 1 2.0 -2))) "
             "(((2 4) ((1 (-2 3)) (1 (1.0 -2 3))))) "
             "(((1 4) (1))) "
             "(((3 8) (1))) "
             "(((2 4) (3 1 2.0 2))) "
             "(((2 4) (-1 1 1 1 4))) "
             "(((5 16) (3))) "
             "(((4 4) (3 3 3 3 3 1 (3 (1 1))))) "
             "(((4 4) (1 -1 1 1 1 1 (2 (-1 2 2 -1 1))))) "
             "(((3 32) (-1))) "
             "(((2 4) (-1 2 2 -1 3))) "
             "(((5 16) (1))) "
             "(((4 4) (1 -2 1 1 1 1 1 (2 (-1 2 2 -1 1))))) "
             "(((2 4) (-1 (4 (3 1 -4 1)))))"
             "(((7 32) (2 3 2))) "
             "(((4 32) (-1))) "
             "(((7 16) (3 2 2)))"
             "(((13 16) (-1)))"
             "(((4 4) ((2 (1 (4 (1 -1 -3 1)))) (2 ((6 ((4 (1.0 -1 -1 1 -1)) -1 1)))))))"
             "(((4 4) ((2 (1 (4 (1 -1 1 -1 1)))) (2 ((6 ((4 (1.0 1 -1 1 -1)) 1 1)))))))"
             "(((4 8) (-1 7)))"))))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 2))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 276)
       (:y 257)
       (:w 67)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value 2)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "level")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 295)
       (:y 215)
       (:w 32)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2)
       (:id 4))
      (:box
       (:type :function)
       (:reference outfile)
       (:group-id nil)
       (:name "outfile")
       (:x 82)
       (:y 100)
       (:w 88)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NAME")
         (:value "")
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 5 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 2 :out 1)) (:to (:box 3 :in 0)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 1 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "my-patch")
   (:x 243)
   (:y 104)
   (:w 148)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 10))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "my-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 96)
       (:y 50)
       (:w 72)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 122)
       (:y 380)
       (:w 79)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name nil)
       (:x 50)
       (:y 145)
       (:w 342)
       (:h 83)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class textbuffer)
         (:slots
          ((:contents
            (:list
             "5000 6100 6550 5200 (4800 5502 6550 6969) 6200 5700 6400 "
             "4800 7700 "
             "4900 6400 6500 (6200 5800 6700 7500) 5400 5600 6300 6550 6700 "
             "5100 6000 "
             "6700 7000 7700 "
             "7514 7750 "
             "5400 "
             "(7314 5090 6549 5531) "
             "4100 4900 6200 "
             "5300 5686 6002 6198 "
             "7775 "
             "5000 6100 6550 5200 (4800 5502 6550 6969) 6200 5700 6400 "
             "6700 6100 5000 5200 6550 (7902 6550 6969 7200) 6200 5700 "
             "6300 6700 6200 "
             "(5500 6633 7507 7889 6771 7205) "
             "6550 6100 5000 5200 (4800 5502 6550 6969) 6200 5700 6300 6700 "
             "6400 5400 4500 "
             "(4800 5502 6550 6969) (4900 6200 6755 6969) (5000 5502 6550 7425) "
             "(6100 6550 6969) (6200 6755 6969) (7028 6550 7425) "
             ""
             "6300 6700 5500 6450 6650 "
             ""
             "6300 6500 6700 4900 6500 6400 6500 6700 "
             "6925"))))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 2))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 122)
       (:y 319)
       (:w 93)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "level")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 165)
       (:y 284)
       (:w 34)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 4))
      (:box
       (:type :function)
       (:reference outfile)
       (:group-id nil)
       (:name "outfile")
       (:x 96)
       (:y 100)
       (:w 88)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NAME")
         (:value "")
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 5 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 2 :out 1)) (:to (:box 3 :in 0)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 1 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "my-patch")
   (:x 432)
   (:y 104)
   (:w 162)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 11))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "my-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 94)
       (:y 50)
       (:w 72)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 175)
       (:y 341)
       (:w 79)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name nil)
       (:x 50)
       (:y 151)
       (:w 334)
       (:h 83)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class textbuffer)
         (:slots
          ((:contents
            (:list
             "50 60 20 30 (40 40 40 40) 40 50 60 "
             "80 100 "
             ""
             "50 60 20 (40 30 50 10) 40 30 50 60 70 "
             "80 100 "
             "20 20 10 "
             "40 67 "
             "50"
             "(90 90 90 90) "
             "90 70 50 "
             "20 40 50 50 "
             "60 "
             "20 30 40 50 (110 110 110 110) 40 50 10  "
             "50 60 20 30 50 (40 30 50 10) 40 50 "
             ""
             "60 70 30 "
             "(100 100 100 100 100 100) "
             "50 60 20 30 (40 30 50 10) 40 50 60 70 "
             "120 60 70 "
             "(50 60 70 75) (90 90 90 75) (50 50 50 80) "
             ""
             "(50 50 50) (60 60 60) (60 60 60) "
             ""
             "60 70 100 60 70 "
             ""
             "40 40 40 40 40 40 40 40 "
             "30"))))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 2))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 175)
       (:y 280)
       (:w 67)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "level")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference outfile)
       (:group-id nil)
       (:name "outfile")
       (:x 94)
       (:y 100)
       (:w 88)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NAME")
         (:value "")
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 192)
       (:y 245)
       (:w 34)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 5)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 4 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 2 :out 1)) (:to (:box 3 :in 0)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 1 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 3 :in 1))))))
   (:group-id nil)
   (:name "my-patch")
   (:x 795)
   (:y 119)
   (:w 178)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 12))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "my-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 94)
       (:y 50)
       (:w 72)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 275)
       (:y 330)
       (:w 79)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name nil)
       (:x 50)
       (:y 148)
       (:w 334)
       (:h 83)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class textbuffer)
         (:slots
          ((:contents
            (:list
             "25 40 40 25 (296 296 296 296) 20 25 20 "
             "296 2021 "
             "25 20 20 (296 296 296 2021) 25 296 25 20 20 "
             "25 296 "
             "16 20 2021 "
             "296 2021 "
             "1997 "
             "(296 296 296 296) "
             "1997 1997 1997 "
             "25 25 40 20 "
             "296 "
             "1997 40 40 25 (270 270 270 270) 20 25 20 20 "
             "40 25 25 40 (296 296 296 296) 20 25 "
             ""
             "20 20 25 "
             "(1997 296 296 2021 267 270) "
             "40 40 25 25 (1997 270 296 20) 20 25 20 20 "
             "270 25 1997 "
             "(1997 270 296 20) (1997 270 296 20) (1997 270 296 20) "
             "(270 296 20) (270 296 20) (270 296 20) "
             ""
             "20 20 25 20 20  "
             "40 40 20 25 20 40 20 20 "
             "296"
             ""))))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 2))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 275)
       (:y 269)
       (:w 67)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "level")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 292)
       (:y 234)
       (:w 34)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 4))
      (:box
       (:type :function)
       (:reference outfile)
       (:group-id nil)
       (:name "outfile")
       (:x 94)
       (:y 100)
       (:w 88)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NAME")
         (:value "")
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 5 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 2 :out 1)) (:to (:box 3 :in 0)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 1 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "my-patch")
   (:x 975)
   (:y 119)
   (:w 140)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 13))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "my-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 261)
       (:y 50)
       (:w 72)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 252)
       (:y 369)
       (:w 79)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name nil)
       (:x 50)
       (:y 157)
       (:w 334)
       (:h 83)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class textbuffer)
         (:slots
          ((:contents
            (:list
             "(-80 50) (-30 75) (-80 50) (-80 50) (-50 50) (-50 50) (-50 50) (-80 80) "
             "(0 45) (-45 35) "
             "(-80 50) (-30 75) (-80 50) (-80 50) (-50 50) (-50 50) (-50 50) (-80 80) (-75 75) "
             "(-50 20) (-45 15) "
             "(-50 20) (-45 15) (-90 90) "
             "(-80 80) (-80 80) "
             "(-80 80) "
             "(-80 80) "
             "(-80 80) (-80 80) (-80 80) "
             "(-80 80) (-60 80) (-80 30) (-50 60) "
             "(-60 50) "
             "(-70 80) (-80 50) (-50 75) (-80 50) (-80 50) (-50 50) (-50 50) (-50 50) "
             "(-80 80) (-75 75) (-80 50) (-50 75) (-80 50) (-80 50) (-50 50) (-50 50) "
             ""
             "(-50 50) (-80 80) (-75 75) "
             "(-80 50) "
             "(-50 50) (-50 50) (-50 50) (-50 50) (-50 50) (-50 50) (-50 50) (-50 50) (-50 50)"
             "(-50 50) (-50 50) (-50 50)  "
             "(-50 50) (-50 50) (-50 50) "
             ""
             "(-50 50) (-30 80) (-80 70) "
             ""
             "(-50 50) (-80 80) (-75 75) (-50 50) (-80 80) "
             "(-50 50) (-50 50) (-50 50) (-50 50) (-50 50) (-50 50) (-50 50) (-50 50)"
             "(-50 50)"
             ""
             ""))))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 2))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 252)
       (:y 308)
       (:w 67)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "level")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 286)
       (:y 272)
       (:w 34)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 4))
      (:box
       (:type :function)
       (:reference outfile)
       (:group-id nil)
       (:name "outfile")
       (:x 261)
       (:y 100)
       (:w 88)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NAME")
         (:value "")
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 5 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 2 :out 1)) (:to (:box 3 :in 0)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 1 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "my-patch")
   (:x 1591)
   (:y 132)
   (:w 176)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 14))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 1406)
   (:y 73)
   (:w 143)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "sustain.txt")
   (:id 15))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "my-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 94)
       (:y 50)
       (:w 72)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 275)
       (:y 330)
       (:w 79)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name nil)
       (:x 50)
       (:y 148)
       (:w 334)
       (:h 83)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class textbuffer)
         (:slots
          ((:contents
            (:list
             "25 40 40 25 (296 296 296 296) 20 25 20 "
             "296 2021 "
             "25 20 20 (296 296 296 2021) 25 296 25 20 20 "
             "25 296 "
             "16 20 2021 "
             "296 2021 "
             "1997 "
             "(296 296 296 296) "
             "1997 1997 1997 "
             "25 25 40 20 "
             "296 "
             "1997 40 40 25 (270 270 270 270) 20 25 20 20 "
             "40 25 25 40 (296 296 296 296) 20 25 "
             ""
             "20 20 25 "
             "(1997 296 296 2021 267 270) "
             "40 40 25 25 (1997 270 296 20) 20 25 20 20 "
             "270 25 1997 "
             "(1997 270 296 20) (1997 270 296 20) (1997 270 296 20) "
             "(270 296 20) (270 296 20) (270 296 20) "
             ""
             "20 20 25 20 20  "
             "40 40 20 25 20 40 20 20 "
             "296"
             ""))))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 2))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 275)
       (:y 269)
       (:w 67)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "level")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 292)
       (:y 234)
       (:w 34)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 4))
      (:box
       (:type :function)
       (:reference outfile)
       (:group-id nil)
       (:name "outfile")
       (:x 94)
       (:y 100)
       (:w 88)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NAME")
         (:value "")
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 5 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 2 :out 1)) (:to (:box 3 :in 0)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 1 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "my-patch")
   (:x 1408)
   (:y 116)
   (:w 140)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 16))
  (:box
   (:type :function)
   (:reference save-sound)
   (:group-id nil)
   (:name "save-sound")
   (:x 585)
   (:y 807)
   (:w 114)
   (:h 31)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FILENAME")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 883)
   (:y 755)
   (:w 92)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "jees6.wav")
   (:id 18))
  (:box
   (:type :function)
   (:reference outfile)
   (:group-id nil)
   (:name "outfile")
   (:x 850)
   (:y 808)
   (:w 88)
   (:h 31)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NAME")
     (:value "")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:box
   (:library "OM-CKN")
   (:type :function)
   (:reference om6-true-durations)
   (:group-id nil)
   (:name "om6-true-durations")
   (:x 514)
   (:y 377)
   (:w 169)
   (:h 31)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 20))
  (:box
   (:type :function)
   (:reference om-abs)
   (:group-id nil)
   (:name "om-abs")
   (:x 554)
   (:y 416)
   (:w 89)
   (:h 31)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 21))
  (:box
   (:type :function)
   (:reference dx->x)
   (:group-id nil)
   (:name "dx->x")
   (:x 817)
   (:y 436)
   (:w 77)
   (:h 31)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "START")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value (:list 1 1))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:box
   (:library "OM-CKN")
   (:type :function)
   (:reference choose-to-rest)
   (:group-id nil)
   (:name "choose-to-rest")
   (:x 279)
   (:y 382)
   (:w 138)
   (:h 31)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 23))
  (:box
   (:library "OM-CKN")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 923)
   (:y 550)
   (:w 85)
   (:h 31)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list 1 2 3 4 5 6 7 8 9 10))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 24))
  (:box
   (:library "OM-CKN")
   (:type :function)
   (:reference sound-mix-list)
   (:group-id nil)
   (:name "sound-mix-list")
   (:x 76)
   (:y 462)
   (:w 138)
   (:h 31)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SOUND")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 25)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 25 :in 0)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 17 :in 0)))
  (:connection
   (:from (:box 2 :out 0))
   (:to (:box 0 :in 0))
   (:attributes (:color nil :style nil :modif (0 -209/6370))))
  (:connection (:from (:box 2 :out 0)) (:to (:box 20 :in 0)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 23 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 3)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 10 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 11 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 12 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 13 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 14 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 2 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 2 :in 2))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 2 :in 4))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 2 :in 6))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 2 :in 8))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 16 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 2 :in 7)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 19 :in 0)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 17 :in 1)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 21 :in 0)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 22 :in 1)))
  (:connection (:from (:box 22 :out 0)) (:to (:box 24 :in 1)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 1 :in 0)))))